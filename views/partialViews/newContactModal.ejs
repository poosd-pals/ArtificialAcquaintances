<div class="modal" id="newContactModal">
    <div class="modal-background"></div>
    <div class="modal-card">
        <header class="modal-card-head">
            <p class="modal-card-title">Create New Contact</p>
            <button class="delete" aria-label="close" onclick="toggleModal()"></button>
        </header>
        <section class="modal-card-body">
            <form action="/contacts/add" method="POST">
            <div class="field is-grouped">
                <div class="control is-expanded">
                    <label class="label">First Name</label>
                    <input class="input is-expanded" type="text" name="newFirstName" id="newFirstName" placeholder="First Name" autofocus="" required>
                </div>

                <div class="control is-expanded">
                    <label class="label">Last Name</label>
                    <input class="input is-expanded" type="text" name="newLastName" id="newLastName" placeholder="Last Name">
                </div>
            </div>

            <div class="field is-grouped">
                <div class="control is-expanded">
                    <label class="label">Email</label>
                    <input class="input is-expanded" type="email" name="newEmail" id="newEmail" placeholder="Email" autofocus="">
                </div>

                <div class="control is-expanded">
                    <label class="label">Phone Number</label>
                    <input class="input is-expanded phoneNum" type="text" name="newPhone" id="newPhone" pattern="[23456789]" return false;" minlength="10" maxlength="10" placeholder="Phone Number">
                </div>
            </div>

            <div class="field">
                <div class="control is-expanded">
                    <label class="label">Address</label>
                    <input class="input is-expanded" type="address" name="newAddressOne" id="newAddressOne" placeholder="Street">
                </div>
            </div>

            <div class="field">
                <div class="control is-expanded">
                    <input class="input is-expanded" type="address" name="newAddressTwo" id="newAddressTwo" placeholder="Apt or Suite">
                </div>
            </div>

            <div class="field is-grouped">
                <div class="control is-expanded">
                    <label class="label">City</label>
                    <input class="input is-expanded" type="text" name="newCity" id="newCity" placeholder="City">
                </div>
                <div class="control is-expanded">
                    <label class="label">State</label>
                    <input class="input is-expanded" type="text" name="newState" id="newState" placeholder="State">
                </div>
                <div class="control is-expanded">
                    <label class="label">Zip Code</label>
                    <input class="input is-expanded zipCode" type="text" return false;" name="newZipcode" pattern="[0-9]" minlength="5" maxlength="5" id="newZipcode" placeholder="Zip Code">
                </div>
            </div>
        </section>
        <footer class="modal-card-foot">
            <button class="button is-success">Save</button>
        </form>
            <button class="button" onclick="toggleModal()">Cancel</button>
        </footer>
    </div>
</div>

<script>
    function toggleModal() {
        const modal = $("#newContactModal")

        if (modal.hasClass("is-active"))
            modal.removeClass("is-active");
        else
            modal.addClass("is-active");
    }
$(".phoneNum").keypress(function(event) {
  // Backspace, tab, enter, end, home, left, right
  var controlKeys = [8, 9, 13, 35, 36, 37, 39];
  var isControlKey = controlKeys.join(",").match(new RegExp(event.which));
  if (!event.which || 
      (48 <= event.which && event.which <= 57) || // Always 1 through 9
      (48 == event.which && $(this).attr("value")) || // No 0 first digit
      isControlKey) {
    return;
  } else {
    event.preventDefault();
  }
});
$(".zipCode").keypress(function(event) {
  // Backspace, tab, enter, end, home, left, right
  var controlKeys = [8, 9, 13, 35, 36, 37, 39];
  var isControlKey = controlKeys.join(",").match(new RegExp(event.which));
  if (!event.which || 
      (48 <= event.which && event.which <= 57) || // Always 1 through 9
      isControlKey) {
    return;
  } else {
    event.preventDefault();
  }
});
</script>